{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","cardComponent","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","searchField","setSearchField","setRobots","useEffect","fetch","then","response","json","users","catch","err","console","filteredRobots","filter","robot","toLowerCase","includes","length","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,gCACI,6BAAMJ,IACN,4BAAKC,WCMNI,EAXE,SAAC,GAAgB,IACxBC,EADuB,EAAbC,OACaC,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,eAAkBD,GAAPC,MAEtB,OACI,8BACKJ,KCOEK,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAArE,SACKJ,EAAMK,Y,4BCoBJC,E,kDAtBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAEDO,MAAQ,CACTC,UAAU,GAJC,E,qDAQnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAU,M,oBAIlB,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAnBEQ,aCyCbC,G,MAnCH,WACR,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOzB,EAAP,KAAe4B,EAAf,KAEAC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIN,EAAUM,GACxBC,OAAM,SAAAC,GAAG,OAAIC,QAAQlB,cAE3B,IAEH,IAIMmB,EAAiBtC,EAAOuC,QAAO,SAAAC,GACjC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAAShB,EAAYe,kBAGzD,OAAQzC,EAAO2C,OAEX,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAZI,SAACuC,GACpBjB,EAAeiB,EAAEC,OAAOC,UAYpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU9C,OAAQsC,WAPV,8CChBbS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c510245.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-t\">\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"Robot\" />\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    const cardComponent = robots.map((user, i) => {\n        return <Card key={i} {...user} />\n    })\n    return (\n        <div>\n            {cardComponent}\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='Search Robots'\n                onChange={searchChange}\n            />\n        </div>\n        \n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '70vh'}}>\n            {props.children}\n        </div>\n        \n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. An error occured.</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nimport './App.css';\n\nconst App = () => {\n    const [searchField, setSearchField] = useState('');\n    const [robots, setRobots] = useState([]);\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users)\n            .catch(err => console.error)\n        );\n    }, [])\n\n    const onSearchChange = (e) => {\n        setSearchField(e.target.value)\n    }\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return !robots.length ? <h1>Loading...</h1> :\n    (\n        <div className='tc'>\n            <h1 className=\"f1\">Robofriends</h1>\n            <SearchBox searchChange={onSearchChange} />\n            <Scroll>\n                <ErrorBoundary>\n                    <CardList robots={filteredRobots} />\n                </ErrorBoundary>\n            </Scroll>\n            \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}